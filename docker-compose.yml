version: '3.9'
name: shortcut-local

services:
  gateway:
    image: nginx:latest
    ports:
      - "8000:80"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    restart: always

  postgres:
    image: postgres:14
    ports:
      - "15432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: users_app_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 1m
      retries: 3
      start_period: 30s
    restart: always
    volumes:
      - ./docker/postgresql/data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      retries: 5
      interval: 30s
    restart: always

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 20s
      retries: 5
      start_period: 10s
    depends_on:
      zookeeper:
        condition: service_healthy

  users-app:
    image: "shortcut/users:0.0.1-SNAPSHOT"
    command:
      - "--spring.datasource.url=jdbc:postgresql://postgres:5432/users_app_db"
      - "--spring.datasource.username=user"
      - "--spring.datasource.password=pass"
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure
    deploy:
      mode: replicated
#      endpoint_mode: vip
      endpoint_mode: dnsrr
      replicas: 3
      resources:
        limits:
          memory: 650M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
